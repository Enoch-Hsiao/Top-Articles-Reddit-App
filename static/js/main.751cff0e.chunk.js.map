{"version":3,"sources":["icons/popular.png","icons/news.png","icons/science.png","icons/music.png","icons/sports.png","icons/gaming.png","icons/photos.png","icon.js","articles.js","banner.js","footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Icon","props","className","src","link","alt","onClick","function","name","Post","url","permalink","media","title","replace","is_video","reddit_video","fallback_url","frameBorder","allowFullScreen","width","height","position","align","display","oembed","html","mediaURL","substring","href","upvotes","comments","Banner","divStyle","backgroundColor","overflow","font","color","margin","alignItems","textAlign","divStyleWithoutData","iconStyle","borderRadius","padding","bannerStyle","data","style","icon","background","subscribers","icon2","Footer","fontFamily","fontSize","App","useState","articleData","setData","subredditData","setSubredditData","numOfEntries","setNumOfEntries","numOfEntriesText","setNumOfEntriesText","linkArticles","setLinkArticles","linkInfo","setLinkInfo","subredditName","placeHolderText","setPlaceHolderText","placeHolderNum","setPlaceHolderNum","icons","key","iconPic","popularIcon","newsIcon","scienceIcon","musicIcon","sportsIcon","gamingIcon","picsIcon","searchBarText","setText","useEffect","fetch","then","response","json","arr","undefined","num","children","length","i","push","id","redditlink","ups","num_comments","author","author_fullname","thumbnail","thumbnail_height","info","message","backgroundImage","decodeHtml","banner_background_image","community_icon","display_name","icon_img","description","public_description","primary_color","imageClick","event","handleChange","target","value","articles","map","subredditIcons","txt","document","createElement","innerHTML","onSubmit","preventDefault","newLink","newSubreddit","isNaN","Number","match","ok","catch","error","console","type","placeholder","onChange","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","log","onUpdate","onSuccess","ReactDOM","render","getElementById","URL","process","origin","addEventListener","headers","contentType","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.751cff0e.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/popular.2faa8b64.png\";","module.exports = __webpack_public_path__ + \"static/media/news.5adc2985.png\";","module.exports = __webpack_public_path__ + \"static/media/science.f7237ab8.png\";","module.exports = __webpack_public_path__ + \"static/media/music.b6b39001.png\";","module.exports = __webpack_public_path__ + \"static/media/sports.79e7975c.png\";","module.exports = __webpack_public_path__ + \"static/media/gaming.6e9063b0.png\";","module.exports = __webpack_public_path__ + \"static/media/photos.a52d3fed.png\";","import React from 'react'\r\n\r\nfunction Icon(props){\r\n    return (\r\n        <div className=\"column\">\r\n          <img className = \"icon\" src={props.link} alt=\"\"  onClick={props.function(props.name)}/>\r\n        </div>\r\n    )   \r\n}\r\n\r\n\r\nexport default Icon","import React from 'react'\r\nimport Iframe from 'react-iframe'\r\nfunction Post(props){\r\n\r\n    let url = \"https://www.reddit.com\" + props.permalink;\r\n    let media = <img src={props.url} alt=\"\" className = \"media\"/>\r\n    let title = props.title.replace(\"&amp;\" , \"&\");\r\n    if(props.is_video){\r\n        if(props.media.reddit_video !== null){\r\n            let link = props.media.reddit_video.fallback_url;\r\n            media = <Iframe src={link}\r\n            frameBorder='0'\r\n            allowFullScreen\r\n            title='video' \r\n            width=\"500px\"\r\n            height=\"500px\"\r\n            position=\"relative\"\r\n            align=\"center\"\r\n            display=\"initial\"\r\n            />;\r\n        } else if(props.media.oembed !== null) {\r\n            media = props.media.oembed.html;\r\n       }\r\n    }\r\n    let mediaURL = props.url.substring(8, 35) + \"...\";\r\n    return (\r\n        <div className = \"box\">\r\n            <div className = \"title\">\r\n                <a href= {url}>{title}</a> \r\n            </div> \r\n            <div className = \"title\">\r\n                <a href= {props.url} className = \"link\">{mediaURL}</a> \r\n            </div>\r\n            <h3>Upvotes: {props.upvotes} Comments: {props.comments}</h3>\r\n            {media}\r\n        </div>\r\n    )   \r\n}\r\n\r\nexport default Post","import React from 'react'\r\n\r\nfunction Banner(props){\r\n    const divStyle = {\r\n        backgroundColor: \"#191919\",\r\n        width: \"100%\",\r\n        height: \"240px\",\r\n        overflow: \"hidden\",\r\n        font: \"verdana\",\r\n        color: \"#E8E8E8\",\r\n        margin: \"auto\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n    }\r\n    const divStyleWithoutData = {\r\n        backgroundColor: \"#191919\",\r\n        width: \"100%\",\r\n        height: \"100px\",\r\n        overflow: \"hidden\",\r\n        font: \"verdana\",\r\n        color: \"#E8E8E8\",\r\n        margin: \"auto\",\r\n        alignItems: \"center\",\r\n        textAlign: \"center\",\r\n    }\r\n    const iconStyle = {\r\n        borderRadius: \"50%\",\r\n        width: \"100px\",\r\n        margin: \"auto\",\r\n        padding: \"0px\",\r\n        display: \"block\",\r\n    }\r\n\r\n    const bannerStyle = {\r\n        width: \"100%\",\r\n        margin: \"auto\",\r\n        padding: \"0px\",\r\n        display: \"block\",\r\n    }\r\n\r\n    if(props.data.data === false) {\r\n        return (\r\n            <div>\r\n                <img src=\"https://i.imgur.com/ki6Zzu2.png\" alt = \"reddit\" style = {bannerStyle}/>     \r\n                <div className = \"banner\" style = {divStyleWithoutData}>        \r\n                    <h1>Top articles from r/{props.data.name}</h1>       \r\n                </div>\r\n            </div>\r\n        )\r\n    } else if (props.data.icon !== \"\"){\r\n      return (\r\n            <div>\r\n                <img src={props.data.background} alt=\"\" style = {bannerStyle}/>          \r\n                <div className = \"banner\" style = {divStyle}>      \r\n                    <h2>{props.data.title}</h2>\r\n                    <h4>r/{props.data.name}  {props.data.subscribers} subscribers</h4>  \r\n                    <img src={props.data.icon} alt=\"\" style = {iconStyle}/>          \r\n                </div>\r\n            </div>\r\n      )\r\n    } else if( props.data.icon2 !== \"\"){\r\n        return (\r\n            <div>\r\n                <img src={props.data.background} alt=\"\" style = {bannerStyle}/>          \r\n                <div className = \"banner\" style = {divStyle}>      \r\n                    <h2>{props.data.title}</h2>\r\n                    <h4>r/{props.data.name}  {props.data.subscribers} subscribers</h4>  \r\n                    <img src={props.data.icon2} alt=\"\" style = {iconStyle}/>          \r\n                </div>\r\n            </div>\r\n        )\r\n    } else {\r\n        return (\r\n            <div>\r\n                <img src={props.data.background} alt=\"\" style = {divStyleWithoutData}/>          \r\n                <div className = \"banner\" style = {divStyleWithoutData}>      \r\n                    <h2>{props.data.title}</h2>\r\n                    <h4>r/{props.data.name}  {props.data.subscribers} subscribers</h4>        \r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default Banner","import React from 'react'\r\n\r\nfunction Footer(){\r\n    const textStyle = {\r\n        fontFamily: \"sans-serif\",\r\n        fontSize: \"20px\",\r\n        textAlign: \"center\",\r\n        color: \"whitesmoke\",\r\n        margin: \"15px\"\r\n    }\r\n    return (\r\n        <div style = {textStyle}>\r\n            Top Articles Reddit Web Application ©Enoch Hsiao 2020\r\n        </div>\r\n    )   \r\n}\r\n\r\n\r\nexport default Footer","import React, { useState ,  useEffect}from 'react'\r\nimport './App.css';\r\nimport Icon from \"./icon.js\"\r\nimport Articles from \"./articles.js\"\r\nimport Banner from \"./banner.js\"\r\nimport Footer from \"./footer.js\"\r\nimport popularIcon from \"./icons/popular.png\"\r\nimport newsIcon from \"./icons/news.png\"\r\nimport scienceIcon from \"./icons/science.png\"\r\nimport musicIcon from \"./icons/music.png\"\r\nimport sportsIcon from \"./icons/sports.png\"\r\nimport gamingIcon from \"./icons/gaming.png\"\r\nimport picsIcon from \"./icons/photos.png\"\r\n\r\nfunction App() {\r\n\r\n  const [articleData, setData] = useState([]);\r\n  const [subredditData, setSubredditData] = useState([]);\r\n  const [numOfEntries, setNumOfEntries] = useState(20);\r\n  const [numOfEntriesText, setNumOfEntriesText] = useState(\"\");\r\n  const [linkArticles, setLinkArticles] = useState(\"https://www.reddit.com/r/popular/.json?limit=51\");\r\n  const [linkInfo, setLinkInfo] = useState(\"https://www.reddit.com/r/popular/about.json\");\r\n  const subredditName = useState(\"popular\");\r\n  const [placeHolderText, setPlaceHolderText] = useState(\"Enter Subreddit\");\r\n  const [placeHolderNum, setPlaceHolderNum] = useState(\"# of Articles (1-50)\");\r\n\r\n  const icons = [{key: 1, name: \"popular\", iconPic: popularIcon},\r\n  {key: 2, name: \"worldnews\", iconPic: newsIcon},\r\n  {key: 3, name: \"science\", iconPic: scienceIcon},\r\n  {key: 4, name: \"music\", iconPic: musicIcon},\r\n  {key: 5, name: \"sports\", iconPic: sportsIcon},\r\n  {key: 6, name: \"gaming\", iconPic: gamingIcon},\r\n  {key: 7, name: \"pics\", iconPic: picsIcon}];\r\n\r\n  let [searchBarText, setText] = useState(\"\");\r\n  let getDataArticles = function get(){ fetch(linkArticles)\r\n  .then(response => response.json())\r\n  .then(data => {\r\n    let arr = [];\r\n    if(data !== undefined) {\r\n      let num = numOfEntries;\r\n      if(data.data.children.length < numOfEntries){\r\n        num = data.data.children.length;\r\n      }\r\n      for(let i = 0; i < num; i++){\r\n          arr.push({id: data.data.children[i].data.id,\r\n                    redditlink: data.data.children[i].data.permalink,\r\n                    url: data.data.children[i].data.url,\r\n                    title: data.data.children[i].data.title, \r\n                    upvotes: data.data.children[i].data.ups,\r\n                    comments: data.data.children[i].data.num_comments,\r\n                    author: data.data.children[i].data.author_fullname,\r\n                    thumbnail: data.data.children[i].data.thumbnail,\r\n                    thumbnail_height: data.data.children[i].data.thumbnail_height,\r\n                    media: data.data.children[i].data.media,\r\n                    is_video: data.data.children[i].data.is_video});\r\n        }\r\n      }\r\n      setData(arr);\r\n    } \r\n  )};\r\n  \r\n  let getDataSubreddit = function get(){ fetch(linkInfo)\r\n    .then(response => response.json())\r\n    .then(data => {\r\n      if(data !== undefined) {\r\n        let info = null;\r\n        let dataFound = data.message !== \"Not Found\";\r\n        if(dataFound){\r\n          let backgroundImage = decodeHtml(data.data.banner_background_image);\r\n          let icon = decodeHtml(data.data.community_icon);\r\n          info = {  \r\n                    data: true,\r\n                    name: data.data.display_name,\r\n                    title: data.data.title,\r\n                    background: backgroundImage,\r\n                    icon: icon,\r\n                    icon2: data.data.icon_img,\r\n                    subscribers: data.data.subscribers,\r\n                    description: data.data.public_description,\r\n                    color: data.data.primary_color\r\n                  };\r\n        } else {\r\n          info = {  data: false,\r\n                    name: subredditName };\r\n        }\r\n        setSubredditData(info);\r\n    }\r\n  })};\r\n  \r\n  useEffect(getDataArticles, [linkArticles, numOfEntries]);\r\n  useEffect(getDataSubreddit, [linkArticles]);\r\n\r\n  const imageClick = function(event) {\r\n      return () => {\r\n        setLinkInfo(\"https://www.reddit.com/r/\" + event + \"/about.json\");\r\n        setLinkArticles(\"https://www.reddit.com/r/\" + event + \"/.json?limit=51\");\r\n    };\r\n  };\r\n  \r\n  function handleChange(event) {\r\n      const {name, value} = event.target;\r\n      if(name === \"searchText\"){\r\n        setText(value);\r\n      } else if (name === \"numOfEntries\") {\r\n        setNumOfEntriesText(value);\r\n      }\r\n  }\r\n\r\n  function handleSubmit(event) {\r\n      event.preventDefault();\r\n      let newLink = linkArticles;\r\n      let newSubreddit = linkInfo;\r\n      if(searchBarText !== \"\"){\r\n        newLink = \"https://www.reddit.com/r/\" + searchBarText + \".json?limit=51\"; \r\n        newSubreddit = \"https://www.reddit.com/r/\" + searchBarText + \"/about.json\";\r\n      }\r\n      if(isNaN(numOfEntriesText) || Number(numOfEntriesText) > 50 || Number(numOfEntriesText) < 0){\r\n        setPlaceHolderNum(\"Insert number between 1-50\");\r\n        setNumOfEntriesText(\"\");\r\n        return;\r\n      } else if (numOfEntriesText !== \"\") {\r\n        newLink = newLink.match(/^(.*?)=/)[0] + numOfEntriesText;\r\n        setNumOfEntries(numOfEntriesText);\r\n      }\r\n      fetch(newLink)\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          setPlaceHolderText(\"Subreddit not found\")\r\n          setText(\"\");\r\n          return;\r\n        } else {\r\n          setLinkInfo(newSubreddit);\r\n          setLinkArticles(newLink);\r\n        }\r\n      })\r\n      .catch((error) => {\r\n        console.error('There has been a problem with your fetch operation:', error);\r\n      });\r\n  }\r\n\r\n  let articles =  articleData.map(data => \r\n    <Articles key = {data.id} \r\n              title = {data.title}\r\n              permalink = {data.redditlink}\r\n              url = {data.url} \r\n              upvotes = {data.upvotes} \r\n              comments = {data.comments}\r\n              author = {data.author}\r\n              thumbnail = {data.thumbnail}\r\n              thumbnail_height = {data.thumbnail_height}\r\n              media = {data.media}\r\n              is_video = {data.is_video}\r\n    />);\r\n\r\n  let subredditIcons = icons.map(data => \r\n  <Icon key = {data.key}\r\n        name = {data.name}\r\n        link = {data.iconPic}\r\n        function = {imageClick}\r\n  />);\r\n\r\n  function decodeHtml(html) {\r\n    var txt = document.createElement(\"textarea\");\r\n    txt.innerHTML = html;\r\n    return txt.value;\r\n}\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <Banner data = {subredditData}/>\r\n      <form className=\"searchBar\" onSubmit={handleSubmit}>\r\n          <input \r\n              type=\"text\"\r\n              name=\"searchText\"\r\n              id=\"inputField\"\r\n              placeholder={placeHolderText}\r\n              value={searchBarText}\r\n              onChange={handleChange}\r\n          />\r\n          <input \r\n            type=\"text\"\r\n            name=\"numOfEntries\"\r\n            id=\"inputField\"\r\n            placeholder={placeHolderNum}\r\n            value={numOfEntriesText}\r\n            onChange={handleChange}\r\n          />\r\n          <button>Search</button>\r\n      </form>\r\n      <div className = \"row\">\r\n        {subredditIcons}\r\n      </div>\r\n      {articles}\r\n      <Footer />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.register();\n"],"sourceRoot":""}